{
  "-H可选项": [
    "Usage: readelf [options] FILES\nDisplay information about the contents of ELF format files.\n  -H, --help                show help information\n  -v, --version             show version\n  -h, --file-header         Display the ELF file header\n  -S, --section-headers     Display the sections' header\n  -s, --syms                Display the symbol table\n  -r, --relocs              Display the relocations (if present)\n  -l, --program-header      Display the program headers\n  -T, --silent-truncation   If a symbol name is truncated, do not add [...] suffix\n  -W                        Don't break output lines to fit into 80 columns\n",
    "Usage: readelf <option(s)> elf-file(s)\n Display information about the contents of ELF format files\n Options are:\n  -a --all               Equivalent to: -h -l -S -s -r -d -V -A -I\n  -h --file-header       Display the ELF file header\n  -l --program-headers   Display the program headers\n     --segments          An alias for --program-headers\n  -S --section-headers   Display the sections' header\n     --sections          An alias for --section-headers\n  -g --section-groups    Display the section groups\n  -t --section-details   Display the section details\n  -e --headers           Equivalent to: -h -l -S\n  -s --syms              Display the symbol table\n     --symbols           An alias for --syms\n  --dyn-syms             Display the dynamic symbol table\n  -n --notes             Display the core notes (if present)\n  -r --relocs            Display the relocations (if present)\n  -u --unwind            Display the unwind info (if present)\n  -d --dynamic           Display the dynamic section (if present)\n  -V --version-info      Display the version sections (if present)\n  -A --arch-specific     Display architecture specific information (if any)\n  -c --archive-index     Display the symbol/file index in an archive\n  -D --use-dynamic       Use the dynamic section info when displaying symbols\n  -x --hex-dump=<number|name>\n                         Dump the contents of section <number|name> as bytes\n  -p --string-dump=<number|name>\n                         Dump the contents of section <number|name> as strings\n  -R --relocated-dump=<number|name>\n                         Dump the contents of section <number|name> as relocated bytes\n  -z --decompress        Decompress section before dumping it\n  -w[lLiaprmfFsoRt] or\n  --debug-dump[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,\n               =frames-interp,=str,=loc,=Ranges,=pubtypes,\n               =gdb_index,=trace_info,=trace_abbrev,=trace_aranges,\n               =addr,=cu_index]\n                         Display the contents of DWARF2 debug sections\n  --dwarf-depth=N        Do not display DIEs at depth N or greater\n  --dwarf-start=N        Display DIEs starting with N, at the same depth\n                         or deeper\n  -I --histogram         Display histogram of bucket list lengths\n  -W --wide              Allow output width to exceed 80 characters\n  @<file>                Read options from <file>\n  -H --help              Display this information\n  -v --version           Display the version number of readelf\nReport bugs to <http://bugzilla.redhat.com/bugzilla/>"
  ],
  "-h可选项": [
    "ELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 \n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              REL (Relocatable file)\n  Machine:                           Advanced Micro Devices X86-64\n  Version:                           0x1\n  Entry point address:               0x0\n  Start of program headers:          0 (bytes into file)\n  Start of section headers:          1896 (bytes into file)\n  Flags:                             0x0\n  Size of this header:               64 (bytes)\n  Size of program headers:           0 (bytes)\n  Number of program headers:         0\n  Size of section headers:           64 (bytes)\n  Number of section headers:         13\n  Section header string table index: 12\n",
    "ELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 \n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              REL (Relocatable file)\n  Machine:                           Advanced Micro Devices X86-64\n  Version:                           0x1\n  Entry point address:               0x0\n  Start of program headers:          0 (bytes into file)\n  Start of section headers:          1896 (bytes into file)\n  Flags:                             0x0\n  Size of this header:               64 (bytes)\n  Size of program headers:           0 (bytes)\n  Number of program headers:         0\n  Size of section headers:           64 (bytes)\n  Number of section headers:         13\n  Section header string table index: 12\n"
  ],
  "-S可选项": [
    "There are 13 section headers, starting at offset 0x768:\n\nSection Headers:\n  [Nr] Name              Type             Address           Offset\n       Size              EntSize          Flags  Link  Info  Align\n  [ 0]                   NULL             0000000000000000  00000000\n       0000000000000000  0000000000000000           0     0     0\n  [ 1] .text             PROGBITS         0000000000000000  00000040\n       0000000000000165  0000000000000000  AX       0     0     1\n  [ 2] .rela.text        RELA             0000000000000000  000004d8\n       0000000000000210  0000000000000018   I      10     1     8\n  [ 3] .data             PROGBITS         0000000000000000  000001a5\n       0000000000000000  0000000000000000  WA       0     0     1\n  [ 4] .bss              NOBITS           0000000000000000  000001a5\n       0000000000000000  0000000000000000  WA       0     0     1\n  [ 5] .rodata           PROGBITS         0000000000000000  000001a8\n       00000000000000df  0000000000000000   A       0     0     8\n  [ 6] .comment          PROGBITS         0000000000000000  00000287\n       000000000000002e  0000000000000001  MS       0     0     1\n  [ 7] .note.GNU-stack   PROGBITS         0000000000000000  000002b5\n       0000000000000000  0000000000000000           0     0     1\n  [ 8] .eh_frame         PROGBITS         0000000000000000  000002b8\n       0000000000000038  0000000000000000   A       0     0     8\n  [ 9] .rela.eh_frame    RELA             0000000000000000  000006e8\n       0000000000000018  0000000000000018   I      10     8     8\n  [10] .symtab           SYMTAB           0000000000000000  000002f0\n       0000000000000198  0000000000000018          11     9     8\n  [11] .strtab           STRTAB           0000000000000000  00000488\n       000000000000004a  0000000000000000           0     0     1\n  [12] .shstrtab         STRTAB           0000000000000000  00000700\n       0000000000000061  0000000000000000           0     0     1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\n  L (link order), O (extra OS processing required), G (group), T (TLS),\n  C (compressed), x (unknown), o (OS specific), E (exclude),\n  l (large), p (processor specific)\n",
    "There are 13 section headers, starting at offset 0x768:\n\nSection Headers:\n  [Nr] Name              Type             Address           Offset\n       Size              EntSize          Flags  Link  Info  Align\n  [ 0]                   NULL             0000000000000000  00000000\n       0000000000000000  0000000000000000           0     0     0\n  [ 1] .text             PROGBITS         0000000000000000  00000040\n       0000000000000165  0000000000000000  AX       0     0     1\n  [ 2] .rela.text        RELA             0000000000000000  000004d8\n       0000000000000210  0000000000000018   I      10     1     8\n  [ 3] .data             PROGBITS         0000000000000000  000001a5\n       0000000000000000  0000000000000000  WA       0     0     1\n  [ 4] .bss              NOBITS           0000000000000000  000001a5\n       0000000000000000  0000000000000000  WA       0     0     1\n  [ 5] .rodata           PROGBITS         0000000000000000  000001a8\n       00000000000000df  0000000000000000   A       0     0     8\n  [ 6] .comment          PROGBITS         0000000000000000  00000287\n       000000000000002e  0000000000000001  MS       0     0     1\n  [ 7] .note.GNU-stack   PROGBITS         0000000000000000  000002b5\n       0000000000000000  0000000000000000           0     0     1\n  [ 8] .eh_frame         PROGBITS         0000000000000000  000002b8\n       0000000000000038  0000000000000000   A       0     0     8\n  [ 9] .rela.eh_frame    RELA             0000000000000000  000006e8\n       0000000000000018  0000000000000018   I      10     8     8\n  [10] .symtab           SYMTAB           0000000000000000  000002f0\n       0000000000000198  0000000000000018          11     9     8\n  [11] .strtab           STRTAB           0000000000000000  00000488\n       000000000000004a  0000000000000000           0     0     1\n  [12] .shstrtab         STRTAB           0000000000000000  00000700\n       0000000000000061  0000000000000000           0     0     1\nKey to Flags:\n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),\n  L (link order), O (extra OS processing required), G (group), T (TLS),\n  C (compressed), x (unknown), o (OS specific), E (exclude),\n  l (large), p (processor specific)\n"
  ],
  "-s可选项": [
    "\nSymbol table '.symtab' contains 17 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.c\n     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 \n     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 \n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000000     0 SECTION LOCAL  DEFAULT    7 \n     7: 0000000000000000     0 SECTION LOCAL  DEFAULT    8 \n     8: 0000000000000000     0 SECTION LOCAL  DEFAULT    6 \n     9: 0000000000000000   357 FUNC    GLOBAL DEFAULT    1 main\n    10: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND dbconnect\n    11: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND puts\n    12: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND add_stu\n    13: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND disconnect\n    14: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND find_stu\n    15: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND printf\n    16: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND delete_stu\n",
    "\nSymbol table '.symtab' contains 17 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.c\n     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1 \n     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    3 \n     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    4 \n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5 \n     6: 0000000000000000     0 SECTION LOCAL  DEFAULT    7 \n     7: 0000000000000000     0 SECTION LOCAL  DEFAULT    8 \n     8: 0000000000000000     0 SECTION LOCAL  DEFAULT    6 \n     9: 0000000000000000   357 FUNC    GLOBAL DEFAULT    1 main\n    10: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND dbconnect\n    11: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND puts\n    12: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND add_stu\n    13: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND disconnect\n    14: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND find_stu\n    15: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND printf\n    16: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND delete_stu\n"
  ],
  "-l可选项": [
    "\nThere are no program headers in this file.\n",
    "\nThere are no program headers in this file.\n"
  ],
  "-r可选项": [
    "\nRelocation section '.rela.text' at offset 0x4d8 contains 22 entries:\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n00000000000c  00050000000a R_X86_64_32       0000000000000000 .rodata + 0\n000000000011  00050000000a R_X86_64_32       0000000000000000 .rodata + 8\n000000000016  00050000000a R_X86_64_32       0000000000000000 .rodata + d\n00000000001b  00050000000a R_X86_64_32       0000000000000000 .rodata + 12\n000000000020  000a00000002 R_X86_64_PC32     0000000000000000 dbconnect - 4\n00000000002a  00050000000a R_X86_64_32       0000000000000000 .rodata + 20\n00000000002f  000b00000002 R_X86_64_PC32     0000000000000000 puts - 4\n000000000043  00050000000a R_X86_64_32       0000000000000000 .rodata + 45\n000000000048  000c00000002 R_X86_64_PC32     0000000000000000 add_stu - 4\n000000000052  00050000000a R_X86_64_32       0000000000000000 .rodata + 50\n000000000057  000b00000002 R_X86_64_PC32     0000000000000000 puts - 4\n000000000061  000d00000002 R_X86_64_PC32     0000000000000000 disconnect - 4\n00000000007f  000e00000002 R_X86_64_PC32     0000000000000000 find_stu - 4\n00000000008c  00050000000a R_X86_64_32       0000000000000000 .rodata + 70\n000000000096  000f00000002 R_X86_64_PC32     0000000000000000 printf - 4\n00000000010c  00050000000a R_X86_64_32       0000000000000000 .rodata + 98\n000000000116  000f00000002 R_X86_64_PC32     0000000000000000 printf - 4\n000000000130  001000000002 R_X86_64_PC32     0000000000000000 delete_stu - 4\n00000000013a  00050000000a R_X86_64_32       0000000000000000 .rodata + c0\n00000000013f  000b00000002 R_X86_64_PC32     0000000000000000 puts - 4\n000000000149  000d00000002 R_X86_64_PC32     0000000000000000 disconnect - 4\n00000000015a  000d00000002 R_X86_64_PC32     0000000000000000 disconnect - 4\n\nRelocation section '.rela.eh_frame' at offset 0x6e8 contains 1 entries:\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0\n",
    "\nRelocation section '.rela.text' at offset 0x4d8 contains 22 entries:\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n00000000000c  00050000000a R_X86_64_32       0000000000000000 .rodata + 0\n000000000011  00050000000a R_X86_64_32       0000000000000000 .rodata + 8\n000000000016  00050000000a R_X86_64_32       0000000000000000 .rodata + d\n00000000001b  00050000000a R_X86_64_32       0000000000000000 .rodata + 12\n000000000020  000a00000002 R_X86_64_PC32     0000000000000000 dbconnect - 4\n00000000002a  00050000000a R_X86_64_32       0000000000000000 .rodata + 20\n00000000002f  000b00000002 R_X86_64_PC32     0000000000000000 puts - 4\n000000000043  00050000000a R_X86_64_32       0000000000000000 .rodata + 45\n000000000048  000c00000002 R_X86_64_PC32     0000000000000000 add_stu - 4\n000000000052  00050000000a R_X86_64_32       0000000000000000 .rodata + 50\n000000000057  000b00000002 R_X86_64_PC32     0000000000000000 puts - 4\n000000000061  000d00000002 R_X86_64_PC32     0000000000000000 disconnect - 4\n00000000007f  000e00000002 R_X86_64_PC32     0000000000000000 find_stu - 4\n00000000008c  00050000000a R_X86_64_32       0000000000000000 .rodata + 70\n000000000096  000f00000002 R_X86_64_PC32     0000000000000000 printf - 4\n00000000010c  00050000000a R_X86_64_32       0000000000000000 .rodata + 98\n000000000116  000f00000002 R_X86_64_PC32     0000000000000000 printf - 4\n000000000130  001000000002 R_X86_64_PC32     0000000000000000 delete_stu - 4\n00000000013a  00050000000a R_X86_64_32       0000000000000000 .rodata + c0\n00000000013f  000b00000002 R_X86_64_PC32     0000000000000000 puts - 4\n000000000149  000d00000002 R_X86_64_PC32     0000000000000000 disconnect - 4\n00000000015a  000d00000002 R_X86_64_PC32     0000000000000000 disconnect - 4\n\nRelocation section '.rela.eh_frame' at offset 0x6e8 contains 1 entries:\n  Offset          Info           Type           Sym. Value    Sym. Name + Addend\n000000000020  000200000002 R_X86_64_PC32     0000000000000000 .text + 0\n"
  ],
  "-v可选项": [
    "readelf version 1.0\n",
    "GNU readelf version 2.27-34.base.el7\nCopyright (C) 2016 Free Software Foundation, Inc.\nThis program is free software; you may redistribute it under the terms of\nthe GNU General Public License version 3 or (at your option) any later version.\nThis program has absolutely no warranty.\n"
  ]
}
